{"pageProps":{"frontmatter":{"title":"Wordle Clone","teaser":"Wordle implementation without daily limit","published":"4. August 2022","thumbnail":"/images/wordle.png","technology":["Next.js","Heroku","Jest"],"github":"https://github.com/LukasSonnabend/wordle-clone-nextjs-ts","demo":"https://endless-wordle-clone-de.herokuapp.com/"},"slug":"wordle-clone","content":"\n# Client/Server Wordle Clone\n\nIn the wake of the 2022 wordle craze I decided to create a clone of the original wordle app which doesn't have a daily limit. I created this version in german for my father who is a wordle enthusiast.\n\nThere were two problems i faced while creating this app:\n\n1. Finding a list of german 5-letter words\n2. Deploying the application to heroku\n\nAfter some research I found the following resource:\n\n- [Comprehesive german word list](https://gist.github.com/MarvinJWendt/2f4f4154b8ae218600eb091a5706b5f4/revisions)\n\nThis is also the first time i used typescript together with nextjs and jest for testing. Which was a good idea because it is a good way to test how to backend was evaluating the guesses.\n\nThe original wordle keeps all code on the client making it very easy (with a bit of javascript knowledge) to find out which word is the word of the day. I decided to create a client/server version of the wordle app. The server picks a random word from the word list and sends its id to the client. To check the guessed word the client always has to send the id with the guess to the client. When the word is guessed correctly a knew word is picked from the list and the id is sent to the client. This makes technically much harder to \"hack\" the game.\n\n![Screenshot](/images/wordle-1.png)"},"__N_SSG":true}